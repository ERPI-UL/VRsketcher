[gd_resource type="VisualShader" load_steps=8 format=2]

[sub_resource type="VisualShaderNodeColorUniform" id=1]
uniform_name = "overlay_color"
default_value_enabled = true
default_value = Color( 1, 0.5625, 0, 1 )

[sub_resource type="VisualShaderNodeFresnel" id=2]

[sub_resource type="VisualShaderNodeScalarUniform" id=3]
uniform_name = "rim_power"
default_value_enabled = true
default_value = 3.0

[sub_resource type="VisualShaderNodeVectorInterp" id=4]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=7]
uniform_name = "overlay_strength"
default_value_enabled = true
default_value = 3.0

[resource]
code = "shader_type spatial;
render_mode blend_add, cull_disabled, specular_schlick_ggx, async_visible;

uniform vec4 overlay_color : hint_color = vec4(1.000000, 0.562500, 0.000000, 1.000000);
uniform float rim_power = 3;
uniform float overlay_strength = 3;



void vertex() {
// Output:0

}

void fragment() {
// Color:7
	vec3 n_out7p0 = vec3(0.000000, 0.000000, 0.000000);
	float n_out7p1 = 1.000000;

// ColorUniform:2
	vec3 n_out2p0 = overlay_color.rgb;
	float n_out2p1 = overlay_color.a;

// ScalarUniform:5
	float n_out5p0 = rim_power;

// Fresnel:3
	float n_out3p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_out5p0);

// VectorMix:6
	vec3 n_out6p0 = mix(n_out7p0, n_out2p0, vec3(n_out3p0));

// ScalarUniform:9
	float n_out9p0 = overlay_strength;

// VectorOp:8
	vec3 n_out8p0 = n_out6p0 * vec3(n_out9p0);

// Output:0
	ALBEDO = n_out7p0;
	EMISSION = n_out8p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -894, -147 )
modes/blend = 1
modes/cull = 2
nodes/fragment/0/position = Vector2( 520, 60 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -640, 160 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -340, 400 )
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( -740, 380 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( 60, 280 )
nodes/fragment/7/node = SubResource( 5 )
nodes/fragment/7/position = Vector2( -520, 60 )
nodes/fragment/8/node = SubResource( 6 )
nodes/fragment/8/position = Vector2( 280, 100 )
nodes/fragment/9/node = SubResource( 7 )
nodes/fragment/9/position = Vector2( -60, -60 )
nodes/fragment/connections = PoolIntArray( 5, 0, 3, 3, 2, 0, 6, 1, 7, 0, 6, 0, 3, 0, 6, 2, 7, 0, 0, 0, 6, 0, 8, 0, 9, 0, 8, 1, 8, 0, 0, 5 )
